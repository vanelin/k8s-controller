name: CI/CD

on:
  push:
    branches: [ "main", "feature/**" ]
    paths:
      - '**.go'
      - '**.mod'
      - '**.sum'
      - 'charts/**'
      - 'cmd/**'
      - 'pkg/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ "main", "feature/**" ]
    paths:
      - '**.go'
      - '**.mod'
      - '**.sum'
      - 'charts/**'
      - 'cmd/**'
      - 'pkg/**'
      - '.github/workflows/ci.yml'

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  APP: k8s-controller

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            platform: linux/amd64
          - os: linux
            arch: arm64
            platform: linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Set version
        id: vars
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            APP_VERSION=${VERSION}
            DOCKER_TAG=${VERSION}
          else
            SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
            VERSION="0.1.0+${GITHUB_SHA}"
            APP_VERSION=${GITHUB_SHA}
            DOCKER_TAG="0.1.0-${SHORT_SHA}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT

      - name: Run tests
        run: make test

      - name: Build binaries for Linux
        run: make build-linux VERSION=${{ steps.vars.outputs.version }}

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: build/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          make docker-build TARGETOS=${{ matrix.os }} TARGETOSARCH=${{ matrix.arch }} VERSION=${{ steps.vars.outputs.version }}

      - name: Push Docker image
        run: |
          make push TARGETOS=${{ matrix.os }} TARGETOSARCH=${{ matrix.arch }} VERSION=${{ steps.vars.outputs.version }}

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.APP }}:${{ steps.vars.outputs.docker_tag }}-${{ matrix.os }}-${{ matrix.arch }}

      - name: Package Helm chart
        run: |
          helm package charts/app --version ${{ steps.vars.outputs.version }} --app-version ${{ steps.vars.outputs.app_version }}
          mkdir -p chart-artifacts
          mv app-${{ steps.vars.outputs.version }}.tgz chart-artifacts/

      - name: Upload Helm chart artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart
          path: chart-artifacts/

  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        id: vars
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            APP_VERSION=${VERSION}
            DOCKER_TAG=${VERSION}
          else
            SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
            VERSION="0.1.0+${GITHUB_SHA}"
            APP_VERSION=${GITHUB_SHA}
            DOCKER_TAG="0.1.0-${SHORT_SHA}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT

      - name: Update Helm chart values
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.image.tag=strenv(DOCKER_TAG)' charts/app/values.yaml
            yq -i '.image.repository=strenv(REGISTRY) + "/" + strenv(REPOSITORY) + "/" + strenv(APP)' charts/app/values.yaml

      - name: Update Chart.yaml
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.version=strenv(VERSION)' charts/app/Chart.yaml
            yq -i '.appVersion=strenv(APP_VERSION)' charts/app/Chart.yaml

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add charts/app/values.yaml charts/app/Chart.yaml
          git commit -m "Update version to $VERSION" || echo "No changes to commit"
          git push 