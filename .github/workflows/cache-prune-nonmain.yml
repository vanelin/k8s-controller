name: Prune caches for non-main branches & PRs
on:
  workflow_run:
    workflows: ["CI"]
    branches-ignore: [main]
    types: [completed]
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name (for branch cache cleanup)'
        required: false
        default: ''
      pr:
        description: 'PR number (for PR cache cleanup)'
        required: false
        default: ''

jobs:
  prune:
    if: |
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'pull_request') ||
      (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Find ref to purge
        id: ref
        run: |
          # For manual run, use input if provided
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ -n "${{ github.event.inputs.pr }}" ]]; then
              echo "ref=refs/pull/${{ github.event.inputs.pr }}/merge" >> $GITHUB_OUTPUT
            elif [[ -n "${{ github.event.inputs.branch }}" ]]; then
              echo "ref=refs/heads/${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
            else
              echo "ref=" >> $GITHUB_OUTPUT
            fi
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "ref=refs/pull/${{ github.event.pull_request.number }}/merge" >> $GITHUB_OUTPUT
          else
            echo "ref=refs/heads/${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Delete ALL caches for that ref
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          REF: ${{ steps.ref.outputs.ref }}
        run: |
          if [ -z "$REF" ]; then
            echo "No ref provided. Please specify a branch or PR number for manual runs."
            exit 1
          fi
          echo "Purging caches for $REF"
          set +e  # Don't fail on individual cache deletion errors
          
          cache_ids=$(gh cache list --ref "$REF" --json id --jq '.[].id')
          
          if [ -z "$cache_ids" ]; then
            echo "No caches found for $REF"
            exit 0
          fi
          
          deleted_count=0
          echo "$cache_ids" | while read -r id; do
            if [ -n "$id" ]; then
              echo "Deleting cache: $id"
              if gh cache delete "$id"; then
                ((deleted_count++))
              fi
            fi
          done
          
          echo "Cache cleanup completed for $REF"