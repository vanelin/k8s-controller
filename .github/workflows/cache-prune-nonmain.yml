name: Prune caches for non-main branches & PRs
on:
  workflow_run:
    workflows: ["CI"]
    branches-ignore: [main]
    types: [completed]
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      cleanup_mode:
        description: 'Cleanup mode'
        required: true
        default: 'single'
        type: choice
        options:
          - single
          - all_branches
          - all_prs
          - everything
      branch:
        description: 'Branch name (for single mode branch cleanup)'
        required: false
        default: ''
      pr:
        description: 'PR number (for single mode PR cleanup)'
        required: false
        default: ''

jobs:
  prune:
    if: |
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'pull_request') ||
      (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Find refs to purge
        id: refs
        run: |
          # For manual run, determine what to clean based on mode
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            mode="${{ github.event.inputs.cleanup_mode }}"
            
            case "$mode" in
              "single")
                if [[ -n "${{ github.event.inputs.pr }}" ]]; then
                  echo "refs=refs/pull/${{ github.event.inputs.pr }}/merge" >> $GITHUB_OUTPUT
                elif [[ -n "${{ github.event.inputs.branch }}" ]]; then
                  echo "refs=refs/heads/${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
                else
                  echo "refs=" >> $GITHUB_OUTPUT
                fi
                ;;
              "all_branches")
                echo "refs=all_branches" >> $GITHUB_OUTPUT
                ;;
              "all_prs")
                echo "refs=all_prs" >> $GITHUB_OUTPUT
                ;;
              "everything")
                echo "refs=everything" >> $GITHUB_OUTPUT
                ;;
            esac
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "refs=refs/pull/${{ github.event.pull_request.number }}/merge" >> $GITHUB_OUTPUT
          else
            echo "refs=refs/heads/${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Delete caches based on mode
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          REFS: ${{ steps.refs.outputs.refs }}
        run: |
          if [ -z "$REFS" ]; then
            echo "No refs provided. Please specify a branch or PR number for single mode."
            exit 1
          fi
          
          case "$REFS" in
            "all_branches")
              echo "Purging caches for ALL branches except main"
              cache_ids=$(gh cache list --json id,ref --jq '.[] | select(.ref | startswith("refs/heads/") and (.ref != "refs/heads/main")) | .id')
              ;;
            "all_prs")
              echo "Purging caches for ALL PRs"
              cache_ids=$(gh cache list --json id,ref --jq '.[] | select(.ref | startswith("refs/pull/")) | .id')
              ;;
            "everything")
              echo "Purging ALL caches except main"
              cache_ids=$(gh cache list --json id,ref --jq '.[] | select(.ref != "refs/heads/main") | .id')
              ;;
            *)
              echo "Purging caches for specific ref: $REFS"
              cache_ids=$(gh cache list --ref "$REFS" --json id --jq '.[].id')
              ;;
          esac
          
          if [ -z "$cache_ids" ]; then
            echo "No caches found for the specified criteria"
            exit 0
          fi
          
          deleted_count=0
          echo "$cache_ids" | while read -r id; do
            if [ -n "$id" ]; then
              echo "Deleting cache: $id"
              if gh cache delete "$id"; then
                ((deleted_count++))
              fi
            fi
          done
          
          echo "Cache cleanup completed"